[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\DELL\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\DELL\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[info] Updated file C:\Users\DELL\OneDrive\Desktop\OAS\project\project\build.properties: set sbt.version to 1.6.2
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 73.8738ms
[debug]       Load.loadUnit: defsScala took 0.2046ms
[debug] [Loading] Scanning directory C:\Users\DELL\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.0069 ms
[debug]           Load.resolveProject(global-plugins) took 41.2796ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\DELL\.sbt\1.0\plugins, plugins: List(<none>))) took 76.2269ms
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 95.6875ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2552ms
[debug]     Load.loadUnit(file:/C:/Users/DELL/.sbt/1.0/plugins/, ...) took 178.3373ms
[debug]   Load.apply: load took 344.5161ms
[debug]   Load.apply: resolveProjects took 7.1039ms
[debug]   Load.apply: finalTransforms took 73.505ms
[debug]   Load.apply: config.delegates took 5.1341ms
[debug]   Load.apply: Def.make(settings)... took 292.8133ms
[debug]   Load.apply: structureIndex took 59.9272ms
[debug]   Load.apply: mkStreams took 1.0153ms
[info] loading global plugins from C:\Users\DELL\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 42682.2771ms
[debug]           Load.loadUnit: plugins took 28.8043ms
[debug]           Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\DELL\OneDrive\Desktop\OAS\project\project
[debug]             Load.loadUnit: mkEval took 5.8534ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\OneDrive\Desktop\OAS\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3363 ms
[info] loading settings for project project-build from idea.sbt ...
[debug]               Load.resolveProject(project-build) took 3.6842ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project-build, base: C:\Users\DELL\OneDrive\Desktop\OAS\project\project, plugins: List(<none>))) took 5.6325ms
[debug] [Loading] Done in C:\Users\DELL\OneDrive\Desktop\OAS\project\project, returning: (project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2589.3824ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.967ms
[debug]         Load.loadUnit(file:/C:/Users/DELL/OneDrive/Desktop/OAS/project/project/, ...) took 2625.5499ms
[debug]       Load.apply: load took 2627.7302ms
[debug]       Load.apply: resolveProjects took 0.1545ms
[debug]       Load.apply: finalTransforms took 10.6309ms
[debug]       Load.apply: config.delegates took 0.3918ms
[debug]       Load.apply: Def.make(settings)... took 67.7095ms
[debug]       Load.apply: structureIndex took 25.4152ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\DELL\OneDrive\Desktop\OAS\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6524.881ms
[debug]     Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\DELL\OneDrive\Desktop\OAS\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\OneDrive\Desktop\OAS\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.688 ms
[debug]         Load.resolveProject(project) took 23.5216ms
[debug]       Load.loadTransitive: finalizeProject(Project(id project, base: C:\Users\DELL\OneDrive\Desktop\OAS\project, plugins: List(<none>))) took 26.4298ms
[debug] [Loading] Done in C:\Users\DELL\OneDrive\Desktop\OAS\project, returning: (project)
[debug]     Load.loadUnit: loadedProjectsRaw took 27.468ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0117ms
[debug]   Load.loadUnit(file:/C:/Users/DELL/OneDrive/Desktop/OAS/project/, ...) took 6553.6292ms
[debug] Load.apply: load took 6556.6546ms
[debug] Load.apply: resolveProjects took 0.1622ms
[debug] Load.apply: finalTransforms took 43.6946ms
[debug] Load.apply: config.delegates took 0.5072ms
[debug] Load.apply: Def.make(settings)... took 88.6801ms
[debug] Load.apply: structureIndex took 37.8285ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to project (in build file:/C:/Users/DELL/OneDrive/Desktop/OAS/project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59455 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59455, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to project (in build file:/C:/Users/DELL/OneDrive/Desktop/OAS/project/)
[debug] > Exec(idea-shell, None, None)
